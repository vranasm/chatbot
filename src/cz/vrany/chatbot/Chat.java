/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.vrany.chatbot;

import com.sun.jna.Native;
import com.sun.jna.platform.win32.User32;
import com.sun.jna.platform.win32.WinDef.HWND;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author michal
 */
public class Chat extends javax.swing.JFrame {

    List<Message> messages;
    public static final int GWL_EXSTYLE = (-20);

    int backTransparent = 128;
    PaintSettings ps;

    public int getIntFromColor(Color color) {
        int Red = (color.getRed() << 16) & 0x00FF0000; //Shift red 16-bits and mask out other stuff
        int Green = (color.getGreen() << 8) & 0x0000FF00; //Shift Green 8-bits and mask out other stuff
        int Blue = color.getBlue() & 0x000000FF; //Mask out anything not blue.

        return Red | Green | Blue; //0xFF000000 for 100% Alpha. Bitwise OR everything together.
    }

    /**
     * Creates new form Chat
     */
    public Chat() {
        messages = new LinkedList<>();
        initComponents();
        // Get Handle to current window
        HWND hWnd = new HWND();
        hWnd.setPointer(Native.getWindowPointer(this));
        int extendedStyle = User32.INSTANCE.GetWindowLong(hWnd, User32.GWL_EXSTYLE);
        User32.INSTANCE.SetWindowLong(hWnd, User32.GWL_EXSTYLE, extendedStyle | User32.WS_EX_TRANSPARENT);
        ps = new PaintSettings();
        ps.timeStampOn = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new CustomPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chat");
        setAlwaysOnTop(true);
        setAutoRequestFocus(false);
        setFocusable(false);
        setName("TWITCH_CHAT"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(panel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
    public void addMessage(boolean hosted, boolean catchPhrase, User user, String message) {
        if (messages.size() > 99) {
            messages.remove(0);
        }
        messages.add(new Message(hosted, catchPhrase, user, message));
        repaint();
    }

    @Override
    public void setBackground(Color bgColor) {
        if (isUndecorated()) {
            Color newBack = new Color(bgColor.getRed(), bgColor.getGreen(), bgColor.getBlue(), backTransparent);
            super.setBackground(newBack);
            panel.setBackground(bgColor);
        } else {
            super.setBackground(bgColor);
        }
    }

    public void setBackTransparent(int transparent) {
        this.backTransparent = transparent;
        Color newBack;
        newBack = new Color(getBackground().getRed(), getBackground().getGreen(), getBackground().getBlue(), transparent);
        setBackground(newBack);
        repaint();
    }

    public void setForeTransparent(int transparent) {
        ps.transparent = transparent;
        repaint();
    }

    public void setWidth(int width) {
        setSize(width, getHeight());
        ps.width = width;
    }

    public void setHeight(int height) {
        setSize(getWidth(), height);
    }

    void setSystemColor(Color color) {
        ps.systemColor = color;
        repaint();
    }

    void setMessageFont(Font font) {
        ps.messageFont = font;
        repaint();
    }

    void setCatchColor(Color color) {
        ps.catchColor = color;
        repaint();
    }

    public void setFontColor(Color fontColor) {
        ps.fontColor = fontColor;
        repaint();
    }

    private class CustomPanel extends JPanel {

        public CustomPanel() {
            setBackground(new Color(192, 192, 192, 64));
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Utilities.paintMessages(g, getHeight(), messages, ps);
        }

    }
}
